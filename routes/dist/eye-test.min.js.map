{"version":3,"sources":["eye-test.js"],"names":["express","require","router","Router","LocalStrategy","Strategy","bcrypt","database","RunQuery","module","exports","passport","done","serializeUser","user","UserID","usernameField","passReqToCallback","passwordField","password","req","username","email","body","rePassword","selectQuery","flash","emailRows","length","fullName","usernameRows","streetAddress","hashSync","phone","address","postcode","city","country","passwordHash","insertQuery","insertResult","insertId","addRow"],"mappings":"aAAA,IAAIA,QAAUC,QAAQ,WAClBC,OAASF,QAAQG,SAIjBC,cAAgBH,QAAQ,kBAAkBI,SAG1CC,OAASL,QAAQ,iBAGjBM,SAAWN,QAAQ,sBAAnBM,SAAWN,SAAQO,SAiBvBC,OAAOC,QAAU,SAAUC,GAUnBC,EAAIC,cAAJ,SAAAC,EAAAF,GADJA,EAAA,KAAAE,EAAAC,UAMQC,EAAAA,IAAa,WAFsB,IAAAZ,cAAA,CAInCa,cAJmC,WAGnCC,cAAe,WAGnBD,mBAAyBE,GAErB,SAAAC,EAAAC,EAAAF,EAAAP,GAGIO,IAAQG,EAAQC,EAAJA,KAASC,MAGpB,GAAAL,GAAAC,EAAAG,KAAAC,WAEGC,OAAWb,EAAG,MAAA,EAAAQ,EAAAM,MAAA,cAAA,4BAIVC,IAAAA,EAAsB,4EAGrBL,EAAA,IACDG,SAAcA,EAAA,SAAAE,GAJlB,GAAuB,EAAnBA,EAAUC,OACV,OAAOhB,EAAK,MAAM,EAAOQ,EAAIM,MAAM,cAAe,yCAatCG,SALJC,EAAsB,+GAItBT,EAAA,IACA,SAAAS,GACYV,GAAZ,EAAgBG,EAAhBK,OACkBL,OAAKQ,EAAAA,MAAvB,EAAAX,EAAAM,MAAA,cAAA,oCAIgB,IAAGpB,EAAO0B,EAASb,KAAAA,SAEjBc,EAAAb,EAAAG,KAAAU,MANdC,EAAUd,EAAIG,KAAKQ,cACnBI,EAOMN,EAFQN,KAEGY,SANjBC,EAOMF,EAAAA,KAAUE,KANhBC,EAOMF,EAJQZ,KAIGc,QANjBC,EAOahC,OAAA0B,SAAAb,EAAA,KAAA,MALboB,EAOc,yGAERlB,EAAW,2CACXiB,EAAAA,2CAEYH,EAAUK,2CAC5BJ,EAAA,2CACWC,EAAA,2CACcI,EAAAA,2CADzBnB,EAAA,2CAGcD,EAAA,2CAPRiB,EASFE,QAQYhC,SAAZ+B,EAAA,SAAAC,GAfR,IAAA1B,EAAA,CAkBHC,OAAAyB,EAAAC,UAERF,EAAA,yEAERC,EAAAC,SAAA,MA5ETZ,EAAA,OA4FJK,EAAA,OACAC,EAAA,OAEAC,EAAA,OAMAC,EAAA,OACAJ,EAAA,KACAzB,SAAA+B,EAAA,SAAAG,GACA,OAAA9B,EAAA,KAAAE,eAOAL,OAAOC,QAAUR","file":"eye-test.min.js","sourcesContent":["var express = require('express');\nvar router = express.Router();\n\n\n// load all the things we need\nvar LocalStrategy = require('passport-local').Strategy;\n\n// Generate Hash\nvar bcrypt = require('bcrypt-nodejs');\n\n// database module\nvar database = require('../config/database');\nvar RunQuery = database.RunQuery;\n\n/* Route Contact-us page. */\n// router.route('/')\n//     .get(function (req, res, next) {\n//         var contextDict = {\n//             currentUrl: '/eye-test',\n//             title: 'Eye test',\n//             customer: req.user\n//         };\n//         res.render('eye-test', contextDict);\n//     })\n\n    /* GET Input page. */\n\n// expose this function to our app using module.exports\nmodule.exports = function (passport) {\n\n    // =========================================================================\n    // passport session setup ==================================================\n    // =========================================================================\n    // required for persistent login sessions\n    // passport needs ability to serialize and unserialize users out of session\n\n    // used to serialize the user for the session\n    passport.serializeUser(function (user, done) {\n        done(null, user.UserID);\n    });\n\n    passport.use('eye-test', new LocalStrategy({\n            // by default, local strategy uses username and password\n            usernameField: 'username',\n            passwordField: 'password',\n            passReqToCallback: true // allows us to pass back the entire request to the callback\n        },\n        function (req, username, password, done) {\n            // find a user whose email is the same as the forms email\n            // we are checking to see if the user trying to login already exists\n            var email = req.body.email;\n\n            if (password != req.body.rePassword) {\n                return done(null, false, req.flash('signUpError', 'Passwords do not match.'));\n            }\n            else {\n\n                var selectQuery = 'SELECT *\\\n                    FROM user1\\\n                    WHERE email = \\'' + email + '\\'';\n                RunQuery(selectQuery, function (emailRows) {\n                    if (emailRows.length > 0) {\n                        return done(null, false, req.flash('signUpError', 'Email address has already been used.'));\n                    }\n                    else {\n                        selectQuery = '\\\n                        SELECT *\\\n                        FROM user1\\\n                        WHERE username = \\'' + username + '\\'';\n                        RunQuery(selectQuery, function (usernameRows) {\n                            if (usernameRows.length > 0) {\n                                return done(null, false, req.flash('signUpError', 'Username has already been used.'));\n                            }\n                            else {\n                                // if there is no user with that user and email\n                                var fullName = req.body.fullName;\n                                var phone = req.body.phone;\n                                var address = req.body.streetAddress;\n                                var postcode = req.body.postcode;\n                                var city = req.body.city;\n                                var country = req.body.country;\n                                var passwordHash = bcrypt.hashSync(password, null, null);\n\n                                var insertQuery = 'INSERT INTO user1\\\n                                    VALUES(null,\\\n                                    \\'' + fullName + '\\', \\\n                                    \\'' + address + '\\', \\\n                                    \\'' + postcode + '\\', \\\n                                    \\'' + city + '\\', \\\n                                    \\'' + country + '\\', \\\n                                    \\'' + phone + '\\', \\\n                                    \\'' + email + '\\', \\\n                                    \\'' + username + '\\', \\\n                                    \\'' + passwordHash + '\\', 0)';\n\n                                RunQuery(insertQuery, function (insertResult) {\n                                    //user\n                                    var user = {\n                                        UserID: insertResult.insertId\n                                    };\n                                    insertQuery = 'INSERT INTO Addresses\\\n                                    VALUES(null, ' +\n                                        insertResult.insertId + ', \\'' +\n                                        fullName + '\\', \\'' +\n                                        address + '\\', \\'' +\n                                        postcode + '\\', \\'' +\n                                        city + '\\', \\'' +\n                                        country + '\\', \\'' +\n                                        phone + '\\')';\n                                    RunQuery(insertQuery, function (addRow) {\n                                        return done(null, user);\n                                    });\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n        })\n    );\n};\n\n\n\n\n\n\n\n\n\n\n\n\n// router.get('/', function(req, res) {\n//     res.render('eye-test');\n\n//     });\n\n\n\n\n\n// con.connect(function(err) {\n//   if (err) throw err;\n//   console.log(\"Connected!\");\n//   var sql = \"INSERT INTO sampledb (name, address) VALUES ('Company Inc', 'Highway 37')\";\n//   con.query(sql, function (err, result) {\n//     if (err) throw err;\n//     console.log(\"1 record inserted\");\n//   });\n// });\n    \nmodule.exports = router;"]}