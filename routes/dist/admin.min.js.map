{"version":3,"sources":["admin.js"],"names":["express","require","router","Router","slug","RunQuery","database","res","next","req","isAuthenticated","user","Username","redirect","route","get","isAdmin","categories","contextDict","sqlStr","title","render","category","body","name","customer","id","post","description","result","product","products","params","selectQuery","orders","price","unit","feature","order","orderCustomer","address","OrderID","UserID","AddressID","updateQuery","deleteQuery","status","customers","module","exports"],"mappings":"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","file":"admin.min.js","sourcesContent":["var express = require('express');\nvar router = express.Router();\n\nvar slug = require('slug');\n\n// database module\nvar database = require('../config/database');\nvar RunQuery = database.RunQuery;\n\nfunction isAdmin(req, res, next) {\n  if (req.isAuthenticated()) {\n    if (req.user.Admin == 1) {\n      return next();\n    } else {\n      res.redirect('/usr/' + req.user.Username);\n    }\n  }\n\n  res.redirect('/');\n}\n\nrouter.route('/').get(isAdmin, function (req, res, next) {\n  res.redirect('/admin/cat');\n  /*var contextDict = {\n         title: 'Admin',\n         customer: req.user\n         };\n         res.render('admin/admin', contextDict);*/\n});\n\nrouter.route('/cat').get(isAdmin, function (req, res, next) {\n  var sqlStr = '\\\n        SELECT *\\\n        FROM Categories';\n\n  RunQuery(sqlStr, function (categories) {\n    var contextDict = {\n      title: 'Admin - Categories',\n      categories: categories,\n      customer: req.user,\n    };\n\n    res.render('admin/categories', contextDict);\n  });\n});\n\nrouter\n  .route('/cat/:id/edit')\n  .get(isAdmin, function (req, res, next) {\n    var sqlStr =\n      '\\\n        SELECT *\\\n        FROM Categories\\\n        WHERE CategoryID = ' +\n      req.params.id;\n\n    RunQuery(sqlStr, function (category) {\n      var contextDict = {\n        title: 'Admin - Edit Category',\n        category: category[0],\n        customer: req.user,\n      };\n\n      res.render('admin/editCat', contextDict);\n    });\n  })\n\n  .post(isAdmin, function (req, res, next) {\n    var sqlStr =\n      \"\\\n        UPDATE Categories\\\n        SET CategoryName = '\" +\n      req.body.name +\n      \"', \\\n            Description = '\" +\n      req.body.description +\n      \"', \\\n            CategorySlug = '\" +\n      slug(req.body.name) +\n      \"' \" +\n      /*Image = name.png\\*/\n      'WHERE CategoryID = ' +\n      req.params.id;\n\n    RunQuery(sqlStr, function (category) {\n      res.redirect('/admin/cat');\n    });\n  });\n\nrouter.route('/cat/:id/delete').post(isAdmin, function (req, res, next) {\n  sqlStr =\n    '\\\n            DELETE FROM Categories\\\n            WHERE CategoryID = ' +\n    req.params.id;\n\n  RunQuery(sqlStr, function (result) {\n    res.redirect('/admin/cat');\n  });\n});\n\nrouter\n  .route('/cat/add')\n  .get(isAdmin, function (req, res, next) {\n    var contextDict = {\n      title: 'Admin - Add Category',\n      customer: req.user,\n    };\n\n    res.render('admin/addCat', contextDict);\n  })\n\n  .post(isAdmin, function (req, res, next) {\n    var sqlStr =\n      \"\\\n        INSERT INTO Categories\\\n        VALUES (null, '\" +\n      req.body.name +\n      \"', \\\n            '\" +\n      req.body.description +\n      \"', \\\n            '\" +\n      slug(req.body.name) +\n      \"', \\\n            '\" +\n      slug(req.body.name) +\n      \".png')\";\n    /*Image = name.png\\*/\n    RunQuery(sqlStr, function (category) {\n      res.redirect('/admin/cat');\n    });\n  });\n\nrouter.route('/products').get(isAdmin, function (req, res, next) {\n  var sqlStr =\n    '\\\n                    SELECT Products.*, Categories.CategoryName\\\n                    FROM Products\\\n                    INNER JOIN Categories\\\n                    ON Products.CategoryID = Categories.CategoryID';\n\n  RunQuery(sqlStr, function (products) {\n    var contextDict = {\n      title: 'Admin - Products',\n      products: products,\n      customer: req.user,\n    };\n\n    res.render('admin/products', contextDict);\n  });\n});\n\nrouter\n  .route('/products/:id/edit')\n  .get(isAdmin, function (req, res, next) {\n    var sqlStr =\n      '\\\n                    SELECT Products.*, Categories.CategoryName\\\n                    FROM Products\\\n                    INNER JOIN Categories\\\n                    ON Products.CategoryID = Categories.CategoryID\\\n                    WHERE ProductID = ' +\n      req.params.id;\n\n    RunQuery(sqlStr, function (product) {\n      sqlStr = '\\\n                SELECT *\\\n                FROM Categories';\n\n      RunQuery(sqlStr, function (categories) {\n        var contextDict = {\n          title: 'Admin - Edit Product',\n          product: product[0],\n          categories: categories,\n          customer: req.user,\n        };\n\n        res.render('admin/editProduct', contextDict);\n      });\n    });\n  })\n\n  .post(isAdmin, function (req, res, next) {\n    var sqlStr =\n      \"\\\n        UPDATE Products\\\n        SET ProductName = '\" +\n      req.body.name +\n      \"', \\\n            CategoryID = \" +\n      req.body.category +\n      ', \\\n            ProductPrice = ' +\n      req.body.price +\n      ', \\\n            UnitsInStock = ' +\n      req.body.unit +\n      \", \\\n            Description = '\" +\n      req.body.description +\n      \"', \\\n            ManufactureYear = \" +\n      req.body.year +\n      \", \\\n            ProductSlug = '\" +\n      slug(req.body.name) +\n      \"', \" +\n      /*Image = name.png\\*/\n      'Feature = ' +\n      req.body.feature +\n      ' \\\n        WHERE ProductID = ' +\n      req.params.id;\n\n    RunQuery(sqlStr, function (category) {\n      res.redirect('/admin/products');\n    });\n  });\n\nrouter.route('/products/:id/delete').post(isAdmin, function (req, res, next) {\n  var sqlStr =\n    '\\\n            DELETE FROM Products\\\n            WHERE ProductID = ' +\n    req.params.id;\n\n  RunQuery(sqlStr, function (result) {\n    res.redirect('/admin/products');\n  });\n});\n\nrouter\n  .route('/products/add')\n  .get(isAdmin, function (req, res, next) {\n    var sqlStr = '\\\n            SELECT *\\\n            FROM Categories';\n\n    RunQuery(sqlStr, function (categories) {\n      var contextDict = {\n        title: 'Admin - Add Product',\n        categories: categories,\n        customer: req.user,\n      };\n\n      res.render('admin/addProduct', contextDict);\n    });\n  })\n\n  .post(isAdmin, function (req, res, next) {\n    var sqlStr =\n      \"\\\n            INSERT INTO Products\\\n            VALUES (null, '\" +\n      req.body.name +\n      \"', \" +\n      req.body.category +\n      ', ' +\n      req.body.price +\n      ', ' +\n      req.body.unit +\n      \", \\\n            '\" +\n      req.body.description +\n      \"', \" +\n      req.body.year +\n      \", \\\n            '\" +\n      slug(req.body.name) +\n      \".png', \\\n            '\" +\n      slug(req.body.name) +\n      \"', \" +\n      req.body.feature +\n      ')';\n    /*Image = name.png\\*/\n    RunQuery(sqlStr, function (category) {\n      res.redirect('/admin/products');\n    });\n  });\n\nrouter.route('/orders').get(isAdmin, function (req, res) {\n  var selectQuery = '\\\n            SELECT *\\\n            FROM Orders';\n\n  RunQuery(selectQuery, function (orders) {\n    var contextDict = {\n      title: 'Admin - Orders',\n      customer: req.user,\n      orders: orders,\n    };\n\n    res.render('admin/orders', contextDict);\n  });\n});\n\nrouter.route('/orders/:id').get(isAdmin, function (req, res) {\n  //get order info\n  var selectQuery =\n    '\\\n            SELECT *\\\n            FROM Orders\\\n            WHERE OrderID = ' +\n    req.params.id;\n\n  RunQuery(selectQuery, function (order) {\n    //get user info\n    selectQuery =\n      '\\\n            SELECT *\\\n            FROM Users\\\n            WHERE UserID = ' +\n      order[0].UserID;\n\n    RunQuery(selectQuery, function (orderCustomer) {\n      //get delivery info\n      selectQuery =\n        '\\\n                SELECT *\\\n                FROM Addresses\\\n                WHERE AddressID = ' +\n        order[0].AddressID;\n\n      RunQuery(selectQuery, function (address) {\n        //get order info\n        selectQuery =\n          '\\\n                    SELECT *\\\n                    FROM `Order Details`\\\n                    INNER JOIN (\\\n                        SELECT Products.*, Categories.CategorySlug\\\n                        FROM Products\\\n                        INNER JOIN Categories\\\n                        ON Products.CategoryID = Categories.CategoryID\\\n                    ) `Table`\\\n                    ON `Order Details`.ProductID = `Table`.ProductID\\\n                    WHERE OrderID = ' +\n          order[0].OrderID;\n\n        RunQuery(selectQuery, function (products) {\n          //get order info\n\n          var contextDict = {\n            title: 'Admin - Orders',\n            customer: req.user,\n            order: order[0],\n            orderCustomer: orderCustomer[0],\n            address: address[0],\n            products: products,\n          };\n\n          res.render('admin/viewOrder', contextDict);\n        });\n      });\n    });\n  });\n});\n\n// SELECT *\\\n//             FROM orders WHERE  = \"2022-04-06 16:51:10\"\n// NEW ONE\n// router.get('orders/pp').get(isAdmin, function (req, res) {\n\n//   // var selectQuery = '\\\n//   //           SELECT *\\\n//   //           FROM orders WHERE OrderDate = \"2022-04-06 16:51:10\" ';\n\n//   // RunQuery(selectQuery, function (customers) {\n//   //   var contextDict = {\n//   //     title: 'Admin - Customers',\n//   //     customer: req.Status,\n//   //     customers: customers,\n//   //   };\n//   //   // res.render('/admin/result', contextDict);\n//     console.log(\"customers-------------------------\")\n//   });\n// });\n\n\n\n\nrouter\n  .route('/orders/:id/update')\n  .get(isAdmin, function (req, res, next) {\n    var selectQuery =\n      '\\\n            SELECT *\\\n            FROM Orders\\\n            WHERE OrderID = ' +\n      req.params.id;\n\n    RunQuery(selectQuery, function (order) {\n      selectQuery =\n        '\\\n                SELECT *\\\n                FROM Addresses\\\n                WHERE AddressID = ' +\n        order[0].AddressID;\n\n      RunQuery(selectQuery, function (address) {\n        selectQuery =\n          '\\\n                    SELECT *\\\n                    FROM `Order Details`\\\n                    INNER JOIN (\\\n                        SELECT Products.*, Categories.CategorySlug\\\n                        FROM Products\\\n                        INNER JOIN Categories\\\n                        ON Products.CategoryID = Categories.CategoryID\\\n                    ) `Table`\\\n                    ON `Order Details`.ProductID = `Table`.ProductID\\\n                    WHERE OrderID = ' +\n          order[0].OrderID;\n\n        RunQuery(selectQuery, function (products) {\n          var contextDict = {\n            title: 'Admin - Update Status Order ' + req.params.id,\n            customer: req.user,\n            order: order[0],\n            address: address[0],\n            products: products,\n          };\n\n          res.render('admin/updateOrder', contextDict);\n        });\n      });\n    });\n  })\n\n  .post(isAdmin, function (req, res, next) {\n    var sqlStr =\n      \"\\\n        UPDATE Orders\\\n        SET Status = '\" +\n      req.body.status +\n      \"' \\\n        WHERE OrderID = \" +\n      req.params.id;\n\n    RunQuery(sqlStr, function (result) {\n      res.redirect('/admin/orders');\n    });\n  });\n\nrouter.route('/customers').get(isAdmin, function (req, res) {\n  var selectQuery = '\\\n            SELECT *\\\n            FROM Users';\n\n  RunQuery(selectQuery, function (customers) {\n    var contextDict = {\n      title: 'Admin - Customers',\n      customer: req.user,\n      customers: customers,\n    };\n\n    res.render('admin/customers', contextDict);\n  });\n});\n//SHK\n// router.route('/admin/orders').get(isAdmin, function (req, res) {\n//   var selectQuery = '\\\n//             SELECT *\\\n//             FROM orders WHERE OrderDate = \"2022-04-06 16:51:10\" ';\n\n//   RunQuery(selectQuery, function (customers) {\n//     var contextDict = {\n//       title: 'Admin - Customers',\n//       customer: req.user,\n//       customers: customers,\n//     };\n\n//     res.render('admin/customers', contextDict);\n//   });\n// });\n\n\nrouter.route('/customers/:id/makeAdmin').post(isAdmin, function (req, res) {\n  var updateQuery =\n    '\\\n            UPDATE Users\\\n            SET Admin = 1\\\n            WHERE UserID = ' +\n    req.params.id;\n\n  RunQuery(updateQuery, function (result) {\n    res.redirect('/admin/customers/');\n  });\n});\n\nrouter.route('/customers/:id/removeAdmin').post(isAdmin, function (req, res) {\n  var updateQuery =\n    '\\\n            UPDATE Users\\\n            SET Admin = 0\\\n            WHERE UserID = ' +\n    req.params.id;\n\n  RunQuery(updateQuery, function (result) {\n    res.redirect('/admin/customers/');\n  });\n});\n\nrouter.route('/customers/:id/delete').post(isAdmin, function (req, res) {\n  var deleteQuery =\n    '\\\n            DELETE FROM Users\\\n            WHERE UserID = ' +\n    req.params.id;\n\n  RunQuery(deleteQuery, function (result) {\n    res.redirect('/admin/customers/');\n  });\n});\n\n//eyepower\n//router.route('/admin/eyepower').get(isAdmin, function (req, res) {\n//    var insertQuery = '\\\n//       INSERT INTO eye_power \n// });\n\nmodule.exports = router;\n"]}