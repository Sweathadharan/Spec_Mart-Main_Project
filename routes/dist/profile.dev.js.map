{"version":3,"sources":["profile.js"],"names":["express","require","router","Router","bcrypt","database","RunQuery","isLoggedIn","req","res","next","isAuthenticated","redirect","route","get","user","Admin","Username","render","title","FullName","customer","post","form","body","compareSync","password","Password","updateQuery","fullName","email","streetAddress","postcode","city","country","phone","UserID","result","newPassword","repeatPassword","currentPassword","passwordHash","hashSync","selectQuery","orders","params","id","order","AddressID","address","OrderID","products","contextDict","addresses","sqlStr","insertQuery","module","exports"],"mappings":"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","sourcesContent":["var express = require('express');\nvar router = express.Router();\n\nvar bcrypt = require('bcrypt-nodejs');\n\n// database module\nvar database = require('../config/database');\nvar RunQuery = database.RunQuery;\n\nfunction isLoggedIn(req, res, next) {\n\n    // if user is authenticated in the session, carry on\n    if (req.isAuthenticated())\n        return next();\n\n    // if they aren't redirect them to the home page\n    res.redirect('/');\n}\n\nrouter.route('/')\n    .get(function (req, res) {\n        if (req.isAuthenticated()) {\n            if (req.user.Admin == 1) {\n                res.redirect('/admin');\n            }\n            else {\n                res.redirect('/usr/' + req.user.Username);\n            }\n        }\n        res.redirect('/');\n    });\n\nrouter.route('/:username')\n    .get(isLoggedIn, function (req, res) {\n\n        res.render('profile/profile', {\n            title: req.user.FullName,\n            customer: req.user\n        });\n    });\n\nrouter.route('/:username/edit')\n    .get(isLoggedIn, function (req, res) {\n        res.render('profile/editProfile', {\n            title: req.user.FullName,\n            customer: req.user\n        });\n    })\n\n    .post(isLoggedIn, function (req, res) {\n        var form = req.body;\n        if (bcrypt.compareSync(form.password, req.user.Password)) {\n            var updateQuery = '\\\n                UPDATE Users\\\n                SET Fullname = \\'' + form.fullName + '\\', \\\n                    Email = \\'' + form.email + '\\', \\\n                    StreetAddress = \\'' + form.streetAddress + '\\', \\\n                    PostCode = \\'' + form.postcode + '\\', \\\n                    City = \\'' + form.city + '\\', \\\n                    Country = \\'' + form.country + '\\', \\\n                    Phone = \\'' + form.phone + '\\' \\\n                WHERE UserID = ' + req.user.UserID;\n\n            RunQuery(updateQuery, function (result) {\n                res.redirect('/usr/' + req.user.Username);\n            });\n        }\n        else {\n            //password wrong\n        }\n    });\n\nrouter.route('/:username/change-password')\n    .get(isLoggedIn, function (req, res) {\n        res.render('profile/changePassword', {\n            title: req.user.FullName,\n            customer: req.user\n        });\n\n    })\n\n    .post(isLoggedIn, function (req, res) {\n        var form = req.body;\n        if (form.newPassword == form.repeatPassword) {\n            if (bcrypt.compareSync(form.currentPassword, req.user.Password)) {\n                var passwordHash = bcrypt.hashSync(form.newPassword, null, null);\n                var updateQuery = '\\\n                UPDATE Users\\\n                SET Password = \\'' + passwordHash + '\\' \\\n                WHERE UserID = ' + req.user.UserID;\n\n                RunQuery(updateQuery, function (result) {\n                    res.redirect('/usr/' + req.user.Username);\n\n                });\n            }\n            else {\n                //password wrong\n            }\n        }\n        else {\n            //passwords are not matched\n        }\n    });\n\nrouter.route('/:username/orders')\n    .get(isLoggedIn, function (req, res) {\n\n        var selectQuery = '\\\n            SELECT *\\\n            FROM Orders\\\n            WHERE UserID = ' + req.user.UserID;\n\n        RunQuery(selectQuery, function (orders) {\n            res.render('profile/orders', {\n                title: req.user.FullName,\n                customer: req.user,\n                orders: orders\n            });\n        });\n    });\n\nrouter.route('/:username/orders/ll')\n.get(isLoggedIn, function (req, res) {\n\n    res.render('profile/pay');\n});\n\nrouter.route('/eye-test/eye')\n.get(isLoggedIn, function (req, res) {\n    res.render('views/eye/');\n});\n\n\nrouter.route('/:username/orders/:id')\n    .get(isLoggedIn, function (req, res) {\n        //get order info\n        var selectQuery = '\\\n            SELECT *\\\n            FROM Orders\\\n            WHERE OrderID = ' + req.params.id;\n\n        RunQuery(selectQuery, function (order) {\n            //get delivery info\n            selectQuery = '\\\n                SELECT *\\\n                FROM Addresses\\\n                WHERE AddressID = ' + order[0].AddressID;\n\n            RunQuery(selectQuery, function (address) {\n                //get order info\n                selectQuery = '\\\n                    SELECT *\\\n                    FROM `Order Details`\\\n                    INNER JOIN (\\\n                        SELECT Products.*, Categories.CategorySlug\\\n                        FROM Products\\\n                        INNER JOIN Categories\\\n                        ON Products.CategoryID = Categories.CategoryID\\\n                    ) `Table`\\\n                    ON `Order Details`.ProductID = `Table`.ProductID\\\n                    WHERE OrderID = ' + order[0].OrderID;\n\n                RunQuery(selectQuery, function (products) {\n                    //get order info\n\n                    var contextDict = {\n                        title: req.user.FullName,\n                        customer: req.user,\n                        order: order[0],\n                        address: address[0],\n                        products: products\n                    };\n\n                    res.render('profile/viewOrder', contextDict);\n                });\n            });\n        });\n    });\n    router.route('/:username/orders/:id')\n    .get(isLoggedIn, function (req, res) {\n        //get order info\n        var selectQuery = '\\\n            SELECT *\\\n            FROM Orders\\\n            WHERE OrderID = ' + req.params.id;\n\n        RunQuery(selectQuery, function (order) {\n            //get delivery info\n            selectQuery = '\\\n                SELECT *\\\n                FROM Addresses\\\n                WHERE AddressID = ' + order[0].AddressID;\n\n            RunQuery(selectQuery, function (address) {\n                //get order info\n                selectQuery = '\\\n                    SELECT *\\\n                    FROM `Order Details`\\\n                    INNER JOIN (\\\n                        SELECT Products.*, Categories.CategorySlug\\\n                        FROM Products\\\n                        INNER JOIN Categories\\\n                        ON Products.CategoryID = Categories.CategoryID\\\n                    ) `Table`\\\n                    ON `Order Details`.ProductID = `Table`.ProductID\\\n                    WHERE OrderID = ' + order[0].OrderID;\n\n                RunQuery(selectQuery, function (products) {\n                    //get order info\n\n                    var contextDict = {\n                        title: req.user.FullName,\n                        customer: req.user,\n                        order: order[0],\n                        address: address[0],\n                        products: products\n                    };\n\n                    res.render('profile/viewOrder', contextDict);\n                });\n            });\n        });\n    });\n\nrouter.route('/:username/addresses')\n    .get(isLoggedIn, function (req, res) {\n\n        var selectQuery = '\\\n            SELECT *\\\n            FROM Addresses\\\n            WHERE UserID = ' + req.user.UserID;\n\n        RunQuery(selectQuery, function (addresses) {\n            res.render('profile/addresses', {\n                title: req.user.FullName,\n                customer: req.user,\n                addresses: addresses\n            });\n        });\n    });\n\nrouter.route('/:username/addresses/:id/edit')\n    .get(isLoggedIn, function (req, res) {\n\n        var selectQuery = '\\\n            SELECT *\\\n            FROM Addresses\\\n            WHERE AddressID = ' + req.params.id;\n\n        RunQuery(selectQuery, function (address) {\n            res.render('profile/editAddress', {\n                title: req.user.FullName,\n                customer: req.user,\n                address: address[0]\n            });\n        });\n    })\n\n    .post(isLoggedIn, function (req, res) {\n        var form = req.body;\n\n        var updateQuery = '\\\n                UPDATE Addresses\\\n                SET Fullname = \\'' + form.fullName + '\\', \\\n                    StreetAddress = \\'' + form.streetAddress + '\\', \\\n                    PostCode = \\'' + form.postcode + '\\', \\\n                    City = \\'' + form.city + '\\', \\\n                    Country = \\'' + form.country + '\\', \\\n                    Phone = \\'' + form.phone + '\\' \\\n                WHERE AddressID = ' + req.params.id;\n\n        RunQuery(updateQuery, function (result) {\n            res.redirect('/usr/' + req.user.Username + '/addresses/');\n        });\n    });\n\nrouter.route('/:username/addresses/:id/delete')\n    .post(isLoggedIn, function (req, res, next) {\n\n        var sqlStr = '\\\n            DELETE FROM Addresses\\\n            WHERE AddressID = ' + req.params.id;\n\n        RunQuery(sqlStr, function (result) {\n            res.redirect('/usr/' + req.user.Username + '/addresses/');\n        });\n    });\n\nrouter.route('/:username/addresses/add')\n    .get(isLoggedIn, function (req, res) {\n        res.render('profile/addAddress', {\n            title: req.user.FullName,\n            customer: req.user\n        });\n    })\n\n    .post(isLoggedIn, function (req, res) {\n        var form = req.body;\n\n        var insertQuery = '\\\n                INSERT INTO Addresses\\\n                VALUES (null, ' + req.user.UserID + ', \\\n                    \\'' + form.fullName + '\\', \\\n                    \\'' + form.streetAddress + '\\', \\\n                    \\'' + form.postcode + '\\', \\\n                    \\'' + form.city + '\\', \\\n                    \\'' + form.country + '\\', \\\n                    \\'' + form.phone + '\\')';\n\n        RunQuery(insertQuery, function (result) {\n            res.redirect('/usr/' + req.user.Username + '/addresses/');\n        });\n    });\n\n\nrouter.route('/:username/addresses/:id/ll')\n.get(isLoggedIn, function (req, res) {\n\n})\n\nmodule.exports = router;"],"file":"profile.dev.js"}